/**
 * Add students to the faculty class object
 * Search the datacontainer for the right faculty member based on name.
 * add the assembled faculty class to the datacontainer
 */
package oivancic.view.inputforms;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import oivancic.baseclasses.Faculty;
import oivancic.baseclasses.FacultyClass;
import oivancic.baseclasses.Student;
import oivancic.data.DataContainer;

/**
 *
 * @author Olga Ivancic
 */
public class AddStudentsToFacultyClass extends javax.swing.JFrame {
    
    DataContainer datacontainer; // local copy of the datacontainer that holds all the data
    DefaultListModel studentListModel = new DefaultListModel();
    private FacultyClass facultyClass = new FacultyClass();
    private String ssn;
    
    /**
     * Creates new form AddStudentsToFacultyClass
     */
    public AddStudentsToFacultyClass(DataContainer datacontainer, FacultyClass facultyClass, String ssn) {
        initComponents();
        this.datacontainer = datacontainer;
        this.facultyClass = facultyClass;
        this.ssn = ssn;
        
        // Add content to the listOfStudents from the ListOfStudents Array List
        // from the datacontainer
        ArrayList<Student> listOfStudents = this.datacontainer.getListOfStudents();
        for (Student aStudent : listOfStudents) {
            studentListModel.addElement(aStudent.getName());
        }
        
        // Set the list model
        this.listOfStudentsJList.setModel(studentListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addStudentsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfStudentsJList = new javax.swing.JList();
        addStudentButton = new javax.swing.JButton();
        closeWindowButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addStudentsLabel.setText("Select Students to Add to the Selected Class:");

        jScrollPane1.setViewportView(listOfStudentsJList);

        addStudentButton.setText("Add Student");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        closeWindowButton.setText("Close");
        closeWindowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeWindowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(addStudentsLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(addStudentButton)
                        .addGap(32, 32, 32)
                        .addComponent(closeWindowButton)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addStudentsLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentButton)
                    .addComponent(closeWindowButton))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeWindowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeWindowButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeWindowButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // Retrieve the selected student from the List of Students
        String selectedStudent = (String) this.listOfStudentsJList.getSelectedValue();
        
        ArrayList<Student> listOfStudents = this.datacontainer.getListOfStudents();
        
        // Retrieve the correct Student from the datacontainer and add it it to this FacultyClass
        for (Student aStudent : listOfStudents) {
            if (aStudent.getName().equals(selectedStudent)) {
                // Add the student to the facultyClass object
                this.facultyClass.addStudent(aStudent);
            }
        }
        
        // Retrieve the correct faculty member from the datacontainer based on the SSN
        for (Faculty facultyMember : this.datacontainer.getListOfFaculty()) {
            // Check if the facultyMember has the matching SSN
            if (facultyMember.getSocialSecurityNumber().equals(ssn)) {
                // if a match add the facultyClass object to the faculty member  
                facultyMember.addClass(facultyClass);
            }
        }
        
    }//GEN-LAST:event_addStudentButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentButton;
    private javax.swing.JLabel addStudentsLabel;
    private javax.swing.JButton closeWindowButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listOfStudentsJList;
    // End of variables declaration//GEN-END:variables
}
